<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.lec.spring.mytrip.repository.FeedRepository">

    <resultMap id="FeedResultMap" type="com.lec.spring.mytrip.domain.Feed">
        <result property="boardId" column="board_id"/>
        <result property="boardSubject" column="board_subject"/>
        <result property="boardContent" column="board_content"/>
        <result property="boardViewCount" column="board_view_count"/>
        <result property="boardDate" column="board_date"/>
        <result property="boardCategory" column="board_category"/>
        <result property="userId" column="user_id"/>
        <!-- City 객체 매핑 -->
        <association property="city" javaType="com.lec.spring.mytrip.domain.City">
            <result property="cityId" column="city_id"/>
            <result property="cityName" column="city_name"/>
        </association>
        <!-- 첨부파일 리스트 매핑 -->
        <collection property="attachmentFiles" ofType="string">
            <result column="board_attachment_file"/>
        </collection>
    </resultMap>

    <sql id="SELECT_BOARD">
        select
            board_id "board_id",
            user_id "user_id",
            city_id "city_id",
            board_subject "board_subject",
            board_content "board_content",
            board_view_count "board_view_count",
            board_date "board_date",
            board_category "board_category"
        from board
        where 1=1
    </sql>

    <!-- 피드 저장 -->
    <insert id="save" flushCache="true" parameterType="com.lec.spring.mytrip.domain.Feed"
        useGeneratedKeys="true" keyColumn="board_id" keyProperty="boardId">
        INSERT INTO board
            (user_id, city_id, board_subject, board_content, board_view_count, board_date, board_category)
        VALUES
            (#{userId}, #{cityId}, #{boardSubject}, #{boardContent}, #{boardViewCount}, now(), #{boardCategory})
    </insert>

    <!-- 특정 피드 id로 글 찾기 -->
    <select id="findById" parameterType="int" resultType="com.lec.spring.mytrip.domain.Feed">
        <include refid="SELECT_BOARD"/>
        AND board_id = #{id}
    </select>


    <!-- 특정 피드 id 글 조회수 증가 -->
    <update id="viewCnt" parameterType="int">
        UPDATE board
        SET board_view_count = board_view_count + 1
        WHERE board_id = #{id}
    </update>

    <!-- 전체 글 목록 : 최신순 -->
    <select id="findAll" resultType="com.lec.spring.mytrip.domain.Feed">
        <include refid="SELECT_BOARD" />
        ORDER BY board_date DESC
    </select>

    <select id="findFeedByUserId" parameterType="int" resultMap="FeedResultMap">
        SELECT
        b.board_id,
        b.board_subject,
        b.board_content,
        b.board_view_count,
        b.board_date,
        b.board_category,
        b.user_id,
        c.city_name ,
        c.city_id,
        ba.board_attachment_file
        FROM
        board b
        LEFT JOIN
        city c ON b.city_id = c.city_id  <!-- city 테이블과 JOIN -->
        left join
            board_attachment ba on b.board_id = ba.board_id
        WHERE
        b.user_id = #{userId} AND b.board_category = '피드'
    </select>

    <!-- 특정 사용자의 최신 게시물 9개 가져오기 -->
    <select id="findRecentFeedByUser" parameterType="int" resultType="com.lec.spring.mytrip.domain.Feed">
        <include refid="SELECT_BOARD" />
        WHERE user_id = #{user_id}
        ORDER BY board_date DESC
    </select>

    <!--최신순 9개조회 -->
    <select id="findRecentFeedsByUserId" parameterType="int" resultMap="FeedResultMap">
        SELECT
        b.board_id,
        b.board_subject,
        b.board_content,
        b.board_view_count,
        b.board_date,
        b.board_category,
        b.user_id,
        c.city_name,
        c.city_id,
        ba.board_attachment_file
        FROM
        board b
        LEFT JOIN
        city c ON b.city_id = c.city_id  <!-- city 테이블과 JOIN -->
        LEFT JOIN
        board_attachment ba ON b.board_id = ba.board_id
        WHERE
        b.user_id = #{userId} AND b.board_category = '피드'
        ORDER BY
        b.board_date DESC
        LIMIT 9
    </select>

    <!-- 특정 피드 id로 피드 수정 -->
    <update id="update" flushCache="true" parameterType="com.lec.spring.mytrip.domain.Feed">
        UPDATE board
        SET board_subject = #{boardSubject},
        board_content = #{boardContent}
        WHERE board_id = #{boardId}
    </update>

    <!--게시글 작성-->
    <insert id="insertFeed" parameterType="com.lec.spring.mytrip.domain.Feed" useGeneratedKeys="true" keyProperty="boardId">
        insert into board(user_id,city_id,board_subject,board_content,board_category)
        VALUES (#{userId}, #{cityId}, #{boardSubject}, #{boardContent}, #{boardCategory})
    </insert>

    <!-- 첨부파일 삽입 -->
    <insert id="insertAttachments" parameterType="com.lec.spring.mytrip.domain.PostAttachment">
        insert into board_attachment(board_id, board_attachment_file)
        values(#{boardId}, #{fileName})
    </insert>

    <update id="updateFeed" parameterType="com.lec.spring.mytrip.domain.Feed">
        <!-- 게시물 수정 -->
        update board
        SET
        city_id = #{cityId},
        board_subject = #{boardSubject},
        board_content = #{boardContent},
        board_category = '피드'
        WHERE
        board_id = #{boardId} AND user_id = #{userId};

        <!-- 기존 첨부파일 삭제 (업데이트 성공 시에만) -->
        <if test="_databaseId == 'MYSQL'">
            DELETE FROM board_attachment WHERE board_id = #{boardId};
        </if>

        <!-- 새로운 첨부파일 추가 -->
        <if test="attachmentFiles != null and attachmentFiles.size() > 0">
            <foreach collection="attachmentFiles" item="file" index="index" open="INSERT INTO board_attachment(board_id, board_attachment_file) VALUES" separator=",">
                (#{boardId}, #{file})
            </foreach>
        </if>
    </update>

    <!-- 특정 피드 id로 피드 삭제  -->
    <delete id="delete" parameterType="int">
        DELETE FROM board
        WHERE board_id = #{id}
    </delete>

    <!--게시물 삭제 -->
    <delete id="deleteFeed" parameterType="int">
        delete from board where board_id=#{boardId} and user_id=#{userId}
    </delete>

    <!-- 전체 피드 개수 -->
    <select id="feedCountAll" resultType="int">
        SELECT COUNT(*) FROM board
    </select>

    <!-- 첨부파일 -->
    <insert id="saveAttachment" parameterType="com.lec.spring.mytrip.domain.PostAttachment">
        INSERT INTO board_attachment (
            board_id,
            board_attachment_file
        ) VALUES (
                     #{boardId},
                     #{boardAttachmentFile}
                 )
    </insert>

    <select id="findAttachmentByBoardId" resultType="com.lec.spring.mytrip.domain.PostAttachment">
        SELECT * FROM board_attachment
                 WHERE board_id = #{boardId}
    </select>

    <delete id="deleteAttachment" parameterType="int">
        DELETE FROM board_attachment
               WHERE board_attachment_id = #{boardAttachmentId}
    </delete>

    <!-- 기존 첨부파일 삭제 -->
    <delete id="deleteAttachmentsByBoardId" parameterType="int">
        DELETE FROM board_attachment WHERE board_id = #{boardId}
    </delete>

    <select id="findAllCities">
        SELECT * FROM city
    </select>

    <select id="findCityById" resultType="com.lec.spring.mytrip.domain.City">
        SELECT * FROM city WHERE city_id = #{id}
    </select>

<!--    도시 및 카테고리 별 불러오기-->

    <select id="findByCityAndCategory" resultType="com.lec.spring.mytrip.domain.Feed">
        SELECT
        b.board_id AS "boardId",
        b.user_id AS "user.id",
        b.city_id AS "city.cityId",
        b.board_subject AS "boardSubject",
        b.board_content AS "boardContent",
        b.board_view_count AS "boardViewCount",
        b.board_date AS "boardDate",
        b.board_category AS "boardCategory",
        u.user_username AS "user.username",
        u.user_name AS "user.name"
        FROM board b
        JOIN user u ON b.user_id = u.user_id  <!-- 수정된 부분 -->
        WHERE b.city_id = #{cityId}
        AND b.board_category = #{category}
    </select>

</mapper>