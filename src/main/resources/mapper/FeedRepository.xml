<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.lec.spring.mytrip.repository.FeedRepository">

    <sql id="SELECT_BOARD">
        select
            board_id "board_id",
            user_id "user_id",
            city_id "city_id",
            board_subject "board_subject",
            board_content "board_content",
            board_view_count "board_view_count",
            board_date "board_date",
            board_category "board_category"
        from board
        where 1=1
    </sql>

    <!-- 피드 저장 -->
    <insert id="save" flushCache="true" parameterType="com.lec.spring.mytrip.domain.Feed"
        useGeneratedKeys="true" keyColumn="id" keyProperty="id">
        INSERT INTO board
            (user_id, city_id, board_subject, board_content, board_view_count, board_date, board_category)
        VALUES
            (#{userId}, #{cityId}, #{boardSubject}, #{boardContent}, #{boardViewCount}, #{boardDate}, #{boardCategory})
    </insert>

    <!-- 특정 피드 id로 글 찾기 -->
    <select id="findById" parameterType="int" resultType="com.lec.spring.mytrip.domain.Feed">
        <include refid="SELECT_BOARD"/>
        AND board_id = #{id}
    </select>

    <!-- 특정 피드 id 글 조회수 증가 -->
    <update id="viewCnt" parameterType="int">
        UPDATE board
        SET board_view_count = board_view_count + 1
        WHERE board_id = #{id}
    </update>

    <!-- 전체 글 목록 : 최신순 -->
    <select id="findAll" resultType="com.lec.spring.mytrip.domain.Feed">
        <include refid="SELECT_BOARD" />
        ORDER BY board_date DESC
    </select>

    <!-- 특정 사용자의 최신 게시물 9개 가져오기 -->
    <select id="findRecentFeedByUser" parameterType="int" resultType="com.lec.spring.mytrip.domain.Feed">
        <include refid="SELECT_BOARD" />
        WHERE user_id = #{user_id}
        ORDER BY board_date DESC
        LIMIT 9
    </select>

    <!-- 특정 피드 id로 피드 수정 -->
    <update id="update" flushCache="true" parameterType="com.lec.spring.mytrip.domain.Feed">
        UPDATE board
        SET board_subject = #{boardSubject},
            board_content = #{boardContent},
            board_category = #{boardCategory},
            city_id = #{cityId}
        WHERE board_id = #{boardId}
    </update>

    <!-- 특정 피드 id로 피드 삭제  -->
    <delete id="delete" parameterType="int">
        DELETE FROM board
        WHERE board_id = #{id}
    </delete>

    <!-- 전체 피드 개수 -->
    <select id="feedCountAll" resultType="int">
        SELECT COUNT(*) FROM board
    </select>

    <!-- 첨부파일 -->
    <insert id="saveAttachment" parameterType="com.lec.spring.mytrip.domain.PostAttachment">
        INSERT INTO board_attachment (
            board_id,
            board_attachment_file
        ) VALUES (
                     #{boardId},
                     #{boardAttachmentFile}
                 )
    </insert>

    <select id="findAttachmentByBoardId" resultType="com.lec.spring.mytrip.domain.PostAttachment">
        SELECT * FROM board_attachment
                 WHERE board_id = #{boardId}
    </select>

    <delete id="deleteAttachment" parameterType="int">
        DELETE FROM board_attachment
               WHERE board_attachment_id = #{boardAttachmentId}
    </delete>

    <delete id="deleteAttachmentByBoardId" parameterType="int">
        DELETE FROM board_attachment WHERE board_id = #{boardId}
    </delete>

    <select id="findAllCities">
        SELECT * FROM city
    </select>

    <select id="findCityById" resultType="com.lec.spring.mytrip.domain.City">
        SELECT * FROM city WHERE city_id = #{id}
    </select>

<!--    도시 및 카테고리 별 불러오기-->

    <select id="findByCityAndCategory" resultType="com.lec.spring.mytrip.domain.Feed">
        SELECT
        b.board_id AS "boardId",
        b.user_id AS "user.id",
        b.city_id AS "city.cityId",
        b.board_subject AS "boardSubject",
        b.board_content AS "boardContent",
        b.board_view_count AS "boardViewCount",
        b.board_date AS "boardDate",
        b.board_category AS "boardCategory",
        u.user_username AS "user.username",
        u.user_name AS "user.name"
        FROM board b
        JOIN user u ON b.user_id = u.user_id  <!-- 수정된 부분 -->
        WHERE b.city_id = #{cityId}
        AND b.board_category = #{category}
    </select>

</mapper>